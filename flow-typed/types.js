/**
 * Flowtype definitions for types
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.13.0
 */

declare var browser: any
declare var twttr: typeof npm$namespace$twttr
declare var npm$namespace$twttr: {|
  txt: typeof twttr$txt,
|}
declare export var twttr$txt: $Exports<'twitter-text'>
declare export var _: $Exports<'lodash'>
declare type EventHandler = (event: Event) => void
declare type Indices = [number, number]
declare interface SuggestFrom {
  value: string;
  indices: Indices;
}
declare interface Topic {
  topic: string;
  rounded_score: number;
  tokens: Array<{
    token: string,
  }>;
}
declare interface User {
  id_str: string;
  verified: boolean;
  is_blocked: boolean;
  name: string;
  screen_name: string;
  profile_image_url_https: string;
  is_protected: boolean;
  rounded_score: number;
  tokens: Array<{
    token: string,
  }>;
}
declare interface TypeaheadResult {
  num_results: number;
  query: string;
  topics: Topic[];
  users: User[];
}
declare interface AcceptedSuggest {
  indices: Indices;
  word: string;
}
declare interface HashFlag {
  url: string;
  startMs: number;
  endMs: number;
}
declare type HashFlagsObj = {
  [tagName: string]: HashFlag[] | void,
  ...
}
